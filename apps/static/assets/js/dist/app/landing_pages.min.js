(function ($, CKEDITOR, Swal, moment) {
  var pages = [];

  function save(e) {
      var a = {
          name: $("#name").val(),
          html: CKEDITOR.instances.html_editor.getData(),
          capture_credentials: $("#capture_credentials_checkbox").prop("checked"),
          capture_passwords: $("#capture_passwords_checkbox").prop("checked"),
          redirect_url: $("#redirect_url_input").val()
      };

      if (e !== -1) {
          a.id = pages[e].id;
          api.pageId.put(a).success(function () {
              successFlash("Page edited successfully!");
              load();
              dismiss();
          });
      } else {
          api.pages.post(a).success(function () {
              successFlash("Page added successfully!");
              load();
              dismiss();
          }).error(function (e) {
              modalError(e.responseJSON.message);
          });
      }
  }

  function dismiss() {
      $("#modal\\.flashes").empty();
      $("#name").val("");
      $("#html_editor").val("");
      $("#url").val("");
      $("#redirect_url_input").val("");
      $("#modal").find("input[type='checkbox']").prop("checked", false);
      $("#capture_passwords").hide();
      $("#redirect_url").hide();
      $("#modal").modal("hide");
  }

  function deletePage(e) {
      Swal.fire({
          title: "Are you sure?",
          text: "This will delete the landing page. This can't be undone!",
          type: "warning",
          animation: false,
          showCancelButton: true,
          confirmButtonText: "Delete " + escapeHtml(pages[e].name),
          confirmButtonColor: "#428bca",
          reverseButtons: true,
          allowOutsideClick: false,
          preConfirm: function () {
              return new Promise(function (resolve, reject) {
                  api.pageId.delete(pages[e].id).success(resolve).error(function (err) {
                      reject(err.responseJSON.message);
                  });
              });
          }
      }).then(function (result) {
          if (result.value) {
              Swal.fire("Landing Page Deleted!", "This landing page has been deleted!", "success");
              $('button:contains("OK")').on("click", function () {
                  location.reload();
              });
          }
      });
  }

  function importSite() {
      var url = $("#url").val();
      if (url) {
          api.clone_site({ url: url, include_resources: false })
              .success(function (data) {
                  $("#html_editor").val(data.html);
                  CKEDITOR.instances.html_editor.setMode("wysiwyg");
                  $("#importSiteModal").modal("hide");
              })
              .error(function (err) {
                  modalError(err.responseJSON.message);
              });
      } else {
          modalError("No URL Specified!");
      }
  }

  function edit(e) {
      $("#modalSubmit").unbind("click").click(function () {
          save(e);
      });
      $("#html_editor").ckeditor();
      setupAutocomplete(CKEDITOR.instances.html_editor);

      var a = {};
      if (e !== -1) {
          $("#modalLabel").text("Edit Landing Page");
          a = pages[e];
          $("#name").val(a.name);
          $("#html_editor").val(a.html);
          $("#capture_credentials_checkbox").prop("checked", a.capture_credentials);
          $("#capture_passwords_checkbox").prop("checked", a.capture_passwords);
          $("#redirect_url_input").val(a.redirect_url);

          if (a.capture_credentials) {
              $("#capture_passwords").show();
              $("#redirect_url").show();
          }
      } else {
          $("#modalLabel").text("New Landing Page");
      }
  }

  function copy(e) {
      $("#modalSubmit").unbind("click").click(function () {
          save(-1);
      });
      $("#html_editor").ckeditor();
      var a = pages[e];
      $("#name").val("Copy of " + a.name);
      $("#html_editor").val(a.html);
  }

  function load() {
      $("#pagesTable").hide();
      $("#emptyMessage").hide();
      $("#loading").show();
      api.pages.get().success(function (data) {
          pages = data;
          $("#loading").hide();
          if (pages.length > 0) {
              $("#pagesTable").show();
              var pagesTable = $("#pagesTable").DataTable({
                  destroy: true,
                  columnDefs: [{ orderable: false, targets: "no-sort" }]
              });
              pagesTable.clear();
              var pageRows = [];
              $.each(pages, function (index, page) {
                  pageRows.push([
                      escapeHtml(page.name),
                      moment(page.modified_date).format("MMMM Do YYYY, h:mm:ss a"),
                      "<div class='pull-right'>" +
                      "<span data-toggle='modal' data-backdrop='static' data-target='#modal'>" +
                      "<button class='btn btn-primary' data-toggle='tooltip' data-placement='left' title='Edit Page' onclick='edit(" +
                      index +
                      ")'><i class='fa fa-pencil'></i></button></span>" +
                      "<span data-toggle='modal' data-target='#modal'>" +
                      "<button class='btn btn-primary' data-toggle='tooltip' data-placement='left' title='Copy Page' onclick='copy(" +
                      index +
                      ")'><i class='fa fa-copy'></i></button></span>" +
                      "<button class='btn btn-danger' data-toggle='tooltip' data-placement='left' title='Delete Page' onclick='deletePage(" +
                      index +
                      ")'><i class='fa fa-trash-o'></i></button></div>"
                  ]);
              });
              pagesTable.rows.add(pageRows).draw();
              $('[data-toggle="tooltip"]').tooltip();
          } else {
              $("#emptyMessage").show();
          }
      }).error(function () {
          $("#loading").hide();
          errorFlash("Error fetching pages");
      });
  }

  $(document).ready(function () {
      $(".modal").on("hidden.bs.modal", function () {
          $(this).removeClass("fv-modal-stack");
          $("body").data("fv_open_modals", $("body").data("fv_open_modals") - 1);
      });

      $(".modal").on("shown.bs.modal", function () {
          if (undefined === $("body").data("fv_open_modals")) {
              $("body").data("fv_open_modals", 0);
          }
          if (!$(this).hasClass("fv-modal-stack")) {
              $(this).addClass("fv-modal-stack");
              $("body").data("fv_open_modals", $("body").data("fv_open_modals") + 1);
              $(this).css("z-index", 1040 + 10 * $("body").data("fv_open_modals"));
              $(".modal-backdrop")
                  .not(".fv-modal-stack")
                  .css("z-index", 1039 + 10 * $("body").data("fv_open_modals"))
                  .addClass("fv-modal-stack");
          }
      });

      $("#modal").on("hidden.bs.modal", dismiss);

      $("#capture_credentials_checkbox").change(function () {
          $("#capture_passwords").toggle();
          $("#redirect_url").toggle();
      });

      CKEDITOR.on("dialogDefinition", function (e) {
          var a = e.data.name;
          var t = e.data.definition;
          if (a === "link") {
              t.minWidth = 500;
              t.minHeight = 100;
              t.getContents("info").get("linkType").hidden = true;
          }
      });

      load();
  });
})(jQuery, CKEDITOR, Swal, moment);
